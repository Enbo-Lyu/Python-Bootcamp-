# -*- coding: utf-8 -*-
"""Complete Python Bootcamp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12fLlqdPCmH9Z_ESuyPgOOt1mgbUopvik
"""

# This original choice value can be anything that isn't an integer

    # While the choice is not a digit, keep asking for input.

        # we shouldn't convert here, otherwise we get an error on a wrong input

        # Error Message Check

    # We can convert once the while loop above has confirmed we have a digit.

def user_choice():
    choice = 'wrong'

    while choice.isdigit() == False:

        choice = input('please enter an integer')

        if choice.isdigit() == False:
            # 为了不让第二次输入时不论是不是integer都再显示what you entered is not an integer
            # 如果第二次是integer就不再打not an integer
            print('what you entered is not an integer')

    return(int(choice))

# please enter an integer two
# what you entered is not an integer
# please enter an integer20
# 20

user_choice()

from IPython.core.display import clear_output
clear_output

def user_choice():
    choice = 'wrong'

    while choice.isdigit() == False:

        choice = input('please enter an integer')

        if choice.isdigit() == False:
            
            clear_output()

            print('what you entered is not an integer')

    return(int(choice))

user_choice()

result = 'wrong'
acceptable_values = ['0', '1', '2']

result in acceptable_values

def user_choice():
    choice = 'wrong'

    while choice not in ['0', '1', '2']:

        choice = input('please enter an integer')

        if choice not in ['0', '1', '2']:
            
            clear_output()

            print('what you entered is not in correct range')

    return(int(choice))

user_choice() # here the input is not integer but str, so ['0', '1', '2']; if want int should int(input)

